"""
Django settings for rotana project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-0ij&e^^+v)u%%5y&-_-l$rc+-*&+_x1nj9zhic^h5qcg)ojqw)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
import os
ALLOWED_HOSTS = ["*", "pythonanywhere.com", "rotana.pythonanywhere.com"]

#REST_AUTH_TOKEN_MODEL = None
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #"storages",
    "corsheaders",
    "rest_framework",
    "rest_framework.authtoken",
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "dj_rest_auth",
    'dj_rest_auth.registration',
    'users',
    "products",
    'booking',
    'menu',
    'hotel',
    'coreapi', # Coreapi for coreapi documentation
    'drf_yasg', # drf_yasg fro Swagger documentatio
]

MIDDLEWARE = [
     "corsheaders.middleware.CorsMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'rotana.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ BASE_DIR / 'templates', ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'rotana.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    #'default': {
     #   'ENGINE': 'django.db.backends.mysql',
      #  'NAME': 'rotana$default',
       # 'USERNAME': 'rotana',
        #'HOST': 'rotana.mysql.pythonanywhere-services.com',
        #'PASSWORD': '',
    #}
    
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
    
}



# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATICFILES_DIRS = [ BASE_DIR /'static', ]
STATIC_URL = '/static/'
#STATIC_ROOT = os.path.join(BASE_DIR,  "static")

MEDIA_URL= 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#STATICFILES_DIRS = [ "static" ]#[ os.path.join(BASE_DIR, 'static/'), ]
#REST_FRAMEWORK = {                           'DEFAULT_AUTHENTICATION_CLASSES': ( 'dj_rest_auth.jwt_auth.JWTCookieAuthentication',),                                     'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema'           }
#REST_AUTH_SERIALIZERS = {
    #'LOGIN_SERIALIZER': 'path.to.custom.LoginSerializer',
    #'TOKEN_SERIALIZER': 'path.to.custom.TokenSerializer',
    #'REGISTER_SERIALIZER': 'users.models.CustomRegisterSerializer',
    #"USER_DETAILS_SERIALIZER":'users.models.UserDetailsSerializer',
#}

AUTH_USER_MODEL = "users.CustomUsers"
#USER_MODEL_USER_FIELD=None
ACCOUNT_USER_MODEL_USERNAME_FIELD = None #"email"
ACCOUNT_USERNAME_REQUIRED=False
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'email'
REST_USE_JWT = True
JWT_AUTH_COOKIE = 'jwt-auth'
ACCOUNT_EMAIL_VERIFICATION = 'none'
CORS_ORIGIN_ALLOW_ALL = True
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'dj_rest_auth.jwt_auth.JWTCookieAuthentication',
    )
}

REST_AUTH_SERIALIZERS = {
    #'LOGIN_SERIALIZER': 'path.to.custom.LoginSerializer',
    #'JWT_SERIALIZER': 'users.models.CustomJWTSerializer',
    'REGISTER_SERIALIZER': 'users.serializers.CustomRegisterSerializer',
    "USER_DETAILS_SERIALIZER":'users.models.UserDetailsSerializer',
}


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,
    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=30),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

ACCOUNT_ADAPTER = 'users.models.CustomUserAccountAdapter'



AWS_ACCESS_KEY_ID = "AKIA6PO6FQSVDQSV6PR2"
AWS_SECRET_ACCESS_KEY = "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"
AWS_STORAGE_BUCKET_NAME = "eboss"
AWS_S3_SIGNATURE_VERSION = 's3v4'
#AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}
# s3 static settings
#AWS_LOCATION = 'static'
AWS_S3_REGION_NAME = "us-east-1"
#STATIC_LOCATION = 'static'
AWS_S3_FILE_OVERWRITE = True
AWS_DEFAULT_ACL = None
AWS_S3_VERIFY = True

#DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
#STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
#MEDIAFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
